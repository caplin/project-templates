import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'

ext {
    major = 0
    minor = 0
    patch = 0

    adapterName = rootProject.name
    replacements = [
            adapterName: adapterName
    ]

}

version = major + "." + minor + "." + patch

repositories {
    mavenCentral()
}

dependencies {
    //TODO: put the datasource with dependencies jar into the libs folder of the project
    compile fileTree(dir: 'libs', include: '*.jar')
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.caplin.template.AdapterTemplate',
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}


task createKit(type: Zip, dependsOn: jar) {
    archiveName = adapterName + "-" + version + ".zip"
    def topDirName = archiveName.substring(0, archiveName.lastIndexOf("."))

    into("${topDirName}") {
        from "${project.projectDir}/blade"
        include 'blade_config/bootstrap.conf'
        if ( !project.hasProperty("configOnly") ) {
            include 'DataSource/bin/start-jar.sh'
        }
        filter(ReplaceTokens, tokens: replacements)
    }

    into("${topDirName}") {
        from "${project.projectDir}/blade"
        exclude 'blade_config/bootstrap.conf'
        exclude 'DataSource/bin/start-jar.sh'
    }

    if ( !project.hasProperty("configOnly") ) {
        into("${topDirName}/DataSource/lib") {
            from([project.jar.outputs, configurations.compile])
        }
    }

}

assemble.dependsOn(createKit)
